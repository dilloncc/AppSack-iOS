/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2014 Google Inc.
 */

//
//  GTLQueryUserendpoint.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   userendpoint/v1
// Description:
//   This is an API
// Classes:
//   GTLQueryUserendpoint (7 custom class methods, 10 custom properties)

#import "GTLQueryUserendpoint.h"

#import "GTLUserendpointAuthResponse.h"
#import "GTLUserendpointCollectionResponseUser.h"
#import "GTLUserendpointUser.h"

@implementation GTLQueryUserendpoint

@dynamic apiKey, cursor, displayName, email, fields, firstName, identifier,
         lastName, limit, password;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map =
    [NSDictionary dictionaryWithObject:@"id"
                                forKey:@"identifier"];
  return map;
}

#pragma mark -
#pragma mark Service level methods
// These create a GTLQueryUserendpoint object.

+ (id)queryForGetCurrentUserWithApiKey:(NSString *)apiKey {
  NSString *methodName = @"userendpoint.getCurrentUser";
  GTLQueryUserendpoint *query = [self queryWithMethodName:methodName];
  query.apiKey = apiKey;
  query.expectedObjectClass = [GTLUserendpointUser class];
  return query;
}

+ (id)queryForInsertNewUserWithEmail:(NSString *)email
                            password:(NSString *)password
                           firstName:(NSString *)firstName
                            lastName:(NSString *)lastName
                         displayName:(NSString *)displayName {
  NSString *methodName = @"userendpoint.insertNewUser";
  GTLQueryUserendpoint *query = [self queryWithMethodName:methodName];
  query.email = email;
  query.password = password;
  query.firstName = firstName;
  query.lastName = lastName;
  query.displayName = displayName;
  query.expectedObjectClass = [GTLUserendpointAuthResponse class];
  return query;
}

+ (id)queryForInsertUserWithObject:(GTLUserendpointUser *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"userendpoint.insertUser";
  GTLQueryUserendpoint *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLUserendpointUser class];
  return query;
}

+ (id)queryForListUser {
  NSString *methodName = @"userendpoint.listUser";
  GTLQueryUserendpoint *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLUserendpointCollectionResponseUser class];
  return query;
}

+ (id)queryForLogInUserWithEmail:(NSString *)email
                        password:(NSString *)password {
  NSString *methodName = @"userendpoint.logInUser";
  GTLQueryUserendpoint *query = [self queryWithMethodName:methodName];
  query.email = email;
  query.password = password;
  query.expectedObjectClass = [GTLUserendpointAuthResponse class];
  return query;
}

+ (id)queryForRemoveUserWithIdentifier:(long long)identifier {
  NSString *methodName = @"userendpoint.removeUser";
  GTLQueryUserendpoint *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  return query;
}

+ (id)queryForUpdateUserWithObject:(GTLUserendpointUser *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"userendpoint.updateUser";
  GTLQueryUserendpoint *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLUserendpointUser class];
  return query;
}

@end
